{
  "hash": "2410fac2c86747fc351072b93f65bdb9",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"LS Bigdata School Homework 2\"\nauthor: Ahyeong Jeong\ndate: \"2024-07-17\"\ncategories: [bigdata]\n---\n\n## p.144\n#### Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보자\n#### `displ`이 4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 `hwy` 평균이 더 높은지 알아보세요\n\n::: {#bba3dfc8 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n```\n:::\n\n\n::: {#15f1d71e .cell execution_count=2}\n``` {.python .cell-code}\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS 빅데이터 스쿨/Doit_Python/Data/mpg.csv\")\ndispl1 = mpg.query('displ <= 4')\ndispl2 = mpg.query('displ >= 5')\ndispl1['hwy'].mean().round(2)\ndispl2['hwy'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nnp.float64(18.08)\n```\n:::\n:::\n\n\n#### Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보자.\n#### `audi`와 `toyota` 중 어느 `manufacturer`의 `cty` 평균이 더 높은지 알아보세요\n\n::: {#37425bae .cell execution_count=3}\n``` {.python .cell-code}\naudi = mpg.query('manufacturer == \"audi\"')\ntoyota = mpg.query('manufacturer == \"toyota\"')\naudi['cty'].mean().round(2)\ntoyota['cty'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nnp.float64(18.53)\n```\n:::\n:::\n\n\n#### Q3. `chevrolet`, `ford`, `honda` 자동차의 고속도로 연비 평균을 알아보자.\n#### 세 회사의 데이터를 추출한 다음 `hwy`전체 평균을 구해보세요.\n\n::: {#1560fd3d .cell execution_count=4}\n``` {.python .cell-code}\ncar3 = mpg.query('manufacturer in [\"chevrolet\", \"ford\", \"honda\"]')\ncar3['hwy'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nnp.float64(22.51)\n```\n:::\n:::\n\n\n## p.150\n#### Q1. `mpg` 데이터 중 일부만 추출해 분석에 활용하자. \n#### `mpg` 데이터에서 `category`, `cty` 변수를 추출해 새로운 데이터를 만들어라. \n#### 새로 만든 데이터의 일부를 추출해 두 변수로만 구성되어 있는지 확인하세요. \n\n::: {#57fdbd5f .cell execution_count=5}\n``` {.python .cell-code}\ndf = mpg[['category','cty']]\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>cty</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>compact</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>compact</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>compact</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>compact</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>compact</td>\n      <td>16</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q2. 자동차 종류에 따라 도시 연비가 어떻게 다른지 알아보고자 한다. \n#### 앞에서 추출한 데이터를 이용해 `category`가 `suv`인 자동차와 `compact`인 자동차 중 어떤 자동차의 `cty` 평균이 더 높은가. \n\n::: {#1da3fad7 .cell execution_count=6}\n``` {.python .cell-code}\ndf.query('category in [\"suv\", \"compact\"]') \\\n  .groupby('category') \\\n  .agg(cty_mean = (\"cty\", \"mean\")) \n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cty_mean</th>\n    </tr>\n    <tr>\n      <th>category</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>compact</th>\n      <td>20.12766</td>\n    </tr>\n    <tr>\n      <th>suv</th>\n      <td>13.50000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## p.153\n#### Q1. `audi`에서 생산한 자동차 중에 어떤 자동차 모델의 `hwy`가 높은지 알아보자\n`audi`에서 생산한 자동차 중 `hwy`가 1~5위에 해당하는 자동차의 데이터를 출력하라\n\n::: {#485f6c2d .cell execution_count=7}\n``` {.python .cell-code}\nmpg.query(\"manufacturer == 'audi'\") \\\n    .sort_values('hwy', ascending = False) \\\n    .head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>audi</td>\n      <td>a4 quattro</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>4</td>\n      <td>20</td>\n      <td>28</td>\n      <td>p</td>\n      <td>compact</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## p.158\n#### Q1. `mpg` 데이터 복사본을 만들고, `cty`와 `hwy`를 더한 '합산 연비 변수'를 추가하라.\n\n::: {#fa8867bd .cell execution_count=8}\n``` {.python .cell-code}\nmpg2 = mpg.copy()\nmpg2 = mpg2.assign(total = mpg2['cty'] + mpg2['hwy'])\nmpg2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n      <th>total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>42</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q2. 앞에서 만든 '합산 연비 변수'를 2로 나눠 '평균 연비 변수'를 추가하라.\n\n::: {#0660a221 .cell execution_count=9}\n``` {.python .cell-code}\nmpg2 = mpg2.assign(mean = mpg2['total'] / 2)\nmpg2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n      <th>total</th>\n      <th>mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>18</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>47</td>\n      <td>23.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>1.8</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>29</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>50</td>\n      <td>25.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>manual(m6)</td>\n      <td>f</td>\n      <td>20</td>\n      <td>31</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n      <td>25.5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.0</td>\n      <td>2008</td>\n      <td>4</td>\n      <td>auto(av)</td>\n      <td>f</td>\n      <td>21</td>\n      <td>30</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>51</td>\n      <td>25.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>audi</td>\n      <td>a4</td>\n      <td>2.8</td>\n      <td>1999</td>\n      <td>6</td>\n      <td>auto(l5)</td>\n      <td>f</td>\n      <td>16</td>\n      <td>26</td>\n      <td>p</td>\n      <td>compact</td>\n      <td>42</td>\n      <td>21.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q3. '평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하라\n\n::: {#5834f5f5 .cell execution_count=10}\n``` {.python .cell-code}\nmpg2.sort_values('mean')['model'].head()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n54       dakota pickup 4wd\n59             durango 4wd\n69     ram 1500 pickup 4wd\n65     ram 1500 pickup 4wd\n126     grand cherokee 4wd\nName: model, dtype: object\n```\n:::\n:::\n\n\n#### Q4. 1~3번 문제를 해결할 수 있는 하나로 연결된 `pandas` 구문을 만들어 실행해 보자.\n#### 데이터는 복사본 대신 `mpg` 원본을 이용하라. \n\n::: {#a7fa818d .cell execution_count=11}\n``` {.python .cell-code}\nmpg.assign(total = mpg[\"cty\"] + mpg[\"cty\"],\n           total_mean = lambda x : x[\"total\"] / 2) \\\n   .sort_values('total_mean', ascending = False) \\\n   .head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>model</th>\n      <th>displ</th>\n      <th>year</th>\n      <th>cyl</th>\n      <th>trans</th>\n      <th>drv</th>\n      <th>cty</th>\n      <th>hwy</th>\n      <th>fl</th>\n      <th>category</th>\n      <th>total</th>\n      <th>total_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>221</th>\n      <td>volkswagen</td>\n      <td>new beetle</td>\n      <td>1.9</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>35</td>\n      <td>44</td>\n      <td>d</td>\n      <td>subcompact</td>\n      <td>70</td>\n      <td>35.0</td>\n    </tr>\n    <tr>\n      <th>212</th>\n      <td>volkswagen</td>\n      <td>jetta</td>\n      <td>1.9</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>manual(m5)</td>\n      <td>f</td>\n      <td>33</td>\n      <td>44</td>\n      <td>d</td>\n      <td>compact</td>\n      <td>66</td>\n      <td>33.0</td>\n    </tr>\n    <tr>\n      <th>222</th>\n      <td>volkswagen</td>\n      <td>new beetle</td>\n      <td>1.9</td>\n      <td>1999</td>\n      <td>4</td>\n      <td>auto(l4)</td>\n      <td>f</td>\n      <td>29</td>\n      <td>41</td>\n      <td>d</td>\n      <td>subcompact</td>\n      <td>58</td>\n      <td>29.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## P.166 \n#### Q1. \n#### `mpg` 데이터의 `category`는 자동차를 특징에 따라 `suv`, `compact` 등 일곱 종류로 분류한 변수\n#### 어떤 차종의 도시 연비가 높은지 비교해 보려고 한다. `category`별 `cty` 평균을 구해 보자. \n\n::: {#9f390441 .cell execution_count=12}\n``` {.python .cell-code}\nmpg.groupby(\"category\", as_index = False) \\\n   .agg(cty_mean = ('cty', 'mean'))\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>cty_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2seater</td>\n      <td>15.400000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>compact</td>\n      <td>20.127660</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>midsize</td>\n      <td>18.756098</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>minivan</td>\n      <td>15.818182</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>pickup</td>\n      <td>13.000000</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>subcompact</td>\n      <td>20.371429</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>suv</td>\n      <td>13.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q2.\n#### 앞 문제의 출력 결과는 `category` 값 알파벳순으로 정렬되어 있다. \n#### 어떤 차종의 도시 연비가 높은지 쉽게 알아볼 수 있도록 `cty` 평균이 높은 순으로 정렬해 출력하라. \n\n::: {#e3502f36 .cell execution_count=13}\n``` {.python .cell-code}\nmpg.groupby(\"category\", as_index = False) \\\n   .agg(cty_mean = ('cty', 'mean')) \\\n   .sort_values('cty_mean', ascending = False)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>cty_mean</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>subcompact</td>\n      <td>20.371429</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>compact</td>\n      <td>20.127660</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>midsize</td>\n      <td>18.756098</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>minivan</td>\n      <td>15.818182</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>2seater</td>\n      <td>15.400000</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>suv</td>\n      <td>13.500000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>pickup</td>\n      <td>13.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q3. \n#### 어떤 회사 자동차의 `hwy`가 가장 높은지 알아보려고 한다. \n#### `hwy` 평균이 가장 높은 회사 세 곳을 출력하세요. \n\n::: {#72627bed .cell execution_count=14}\n``` {.python .cell-code}\nmpg.groupby('manufacturer', as_index = False) \\\n   .agg(mean_hwy = ('hwy', 'mean')) \\\n   .sort_values('mean_hwy', ascending = False)\\\n   .round(2) \\\n   .head(3)[['manufacturer']]\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>4</th>\n      <td>honda</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>volkswagen</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>hyundai</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#### Q4.\n#### 어떤 회사에서 `compact` 차종을 가장 많이 생산하는지 알아보려고 한다. \n#### 회사별 `compact`차종 수를 내림차순으로 정렬해 출력하라. \n\n::: {#0648a165 .cell execution_count=15}\n``` {.python .cell-code}\nmpg.query('category == \"compact\"') \\\n   .groupby('manufacturer', as_index = False) \\\n   .agg(n = ('category', 'count')) \\\n   .sort_values('n', ascending = False)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>manufacturer</th>\n      <th>n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>audi</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>volkswagen</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>toyota</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>subaru</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>nissan</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}